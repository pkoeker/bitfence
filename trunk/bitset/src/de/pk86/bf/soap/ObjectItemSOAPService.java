
package de.pk86.bf.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ObjectItemSOAPService", targetNamespace = "http://pk86.de/bitset")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ObjectItemSOAPService {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hasNext", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.HasNext")
    @ResponseWrapper(localName = "hasNextResponse", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.HasNextResponse")
    public boolean hasNext(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNextPageString", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.GetNextPageString")
    @ResponseWrapper(localName = "getNextPageStringResponse", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.GetNextPageStringResponse")
    public String getNextPageString(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPrevPageString", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.GetPrevPageString")
    @ResponseWrapper(localName = "getPrevPageStringResponse", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.GetPrevPageStringResponse")
    public String getPrevPageString(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hasSession", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.HasSession")
    @ResponseWrapper(localName = "hasSessionResponse", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.HasSessionResponse")
    public boolean hasSession(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "endSession", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.EndSession")
    @ResponseWrapper(localName = "endSessionResponse", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.EndSessionResponse")
    public boolean endSession(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSession", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.CreateSession")
    @ResponseWrapper(localName = "createSessionResponse", targetNamespace = "http://pk86.de/bitset", className = "de.pk86.bf.soap.CreateSessionResponse")
    public int createSession(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
